pip install opencv-python dlib face_recognition
import cv2

image = cv2.imread('your_image.jpg')
cv2.imshow('Image', image)
cv2.waitKey(0)
cv2.destroyAllWindows()
import face_recognition

image = face_recognition.load_image_file('your_image.jpg')
face_locations = face_recognition.face_locations(image)

for face_location in face_locations:
    top, right, bottom, left = face_location
    cv2.rectangle(image, (left, top), (right, bottom), (0, 255, 0), 2)

cv2.imshow('Detected Faces', image)
cv2.waitKey(0)
cv2.destroyAllWindows()
face_encodings = face_recognition.face_encodings(image, face_locations)
known_face_encodings = []  # Add your known face encodings here
known_face_names = []      # Add your known face names here

# Assume you have an unknown image
unknown_image = face_recognition.load_image_file('unknown_image.jpg')
unknown_face_encodings = face_recognition.face_encodings(unknown_image)

for unknown_encoding in unknown_face_encodings:
    results = face_recognition.compare_faces(known_face_encodings, unknown_encoding)
    if True in results:
        first_match_index = results.index(True)
        name = known_face_names[first_match_index]
    else:
        name = "Unknown"

    print(f"Recognized: {name}")
video_capture = cv2.VideoCapture(0)

while True:
    ret, frame = video_capture.read()
    rgb_frame = frame[:, :, ::-1]

    face_locations = face_recognition.face_locations(rgb_frame)
    face_encodings = face_recognition.face_encodings(rgb_frame, face_locations)

    for (top, right, bottom, left), face_encoding in zip(face_locations, face_encodings):
        matches = face_recognition.compare_faces(known_face_encodings, face_encoding)
        name = "Unknown"

        if True in matches:
            first_match_index = matches.index(True)
            name = known_face_names[first_match_index]

        cv2.rectangle(frame, (left, top), (right, bottom), (0, 255, 0), 2)
        cv2.putText(frame, name, (left + 6, bottom - 6), cv2.FONT_HERSHEY_DUPLEX, 0.5, (255, 255, 255), 1)

    cv2.imshow('Video', frame)

    if cv2.waitKey(1) & 0xFF == ord('q'):
        break

video_capture.release()
cv2.destroyAllWindows()
